name: Deploy - Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important to fetch all history
          fetch-tags: true  # Important to get all tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci  # Usar ci para instalaÃ§Ã£o limpa

      - name: Calculate new version
        id: version
        run: |
          # Script melhorado com fallback e validaÃ§Ã£o
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current Version: $LAST_TAG"
          
          # Usando conventional-commits-parser para anÃ¡lise mais robusta
          npm install -g conventional-commits-parser
          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"%s")
          
          # LÃ³gica de versionamento semÃ¢ntico
          if echo "$COMMITS" | grep -qE '^(feat|break)'; then
            BUMP="major"
          elif echo "$COMMITS" | grep -q '^feat'; then
            BUMP="minor"
          else
            BUMP="patch"
          fi
          
          NEW_VERSION=$(npm version $BUMP --no-git-tag-version | cut -c 2-)
          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update version and push
        env:
          GH_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add package.json
          git commit -m "chore(release): v${{ env.NEW_VERSION }} [skip ci]"
          git tag v${{ env.NEW_VERSION }}
          git push origin main
          git push origin v${{ env.NEW_VERSION }}

      - name: Notify on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_ORIGEM }}
          password: ${{ secrets.SENHA_EMAIL }}
          subject: "ðŸš¨ Deployment Failed: ${{ github.repository }}"
          body: O workflow falhou no passo de testes.
          to: ${{ secrets.EMAIL_DESTINO }}
          from: GitHub Actions <${{ secrets.EMAIL_ORIGEM }}>